plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'application'
	id 'com.adarshr.test-logger' version '2.1.1'
	id 'com.github.ben-manes.versions' version '0.38.0'
	id 'com.github.johnrengelman.processes' version '0.5.0'
	id 'org.siouan.frontend-jdk11' version '6.0.0'
}

group = 'com.geolocator'
version = '1.0-SNAPSHOT'

application {
	mainClass = 'com.mygeolocator.AppApplication'
}

repositories {
	mavenCentral()
}

compileJava {
	options.release = 17
	options.encoding = 'UTF-8'
}

dependencies {
	implementation 'junit:junit:4.13.2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.projectlombok:lombok:1.18.24'

	annotationProcessor(
			'org.projectlombok:lombok:1.18.24',
			'javax.annotation:javax.annotation-api:1.3.2',
			'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final'
	)
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	implementation(
			'org.json:json:20220320',
			'org.springframework.boot:spring-boot-starter-data-jpa',
			'org.springframework.boot:spring-boot-starter-web',
			'org.springframework.boot:spring-boot-starter-actuator'
	)

	runtimeOnly (
			'org.postgresql:postgresql:42.3.6'
	)
}

tasks.named('test') {
	useJUnitPlatform()
}

frontend {
	nodeVersion = '16.13.1'
	installScript = 'install'
	assembleScript = 'run build'
	packageJsonDirectory = file("${projectDir}/frontend")
}

def configFrontendTasks = {
	inputs.files(fileTree("$projectDir/frontend").exclude('build', 'node_modules'))
	outputs.dir("$buildDir/resources/main/static")
}

assembleFrontend {
	configure configFrontendTasks

	doLast {
		copy {
			from "$projectDir/frontend/build"
			into "$buildDir/resources/main/static"
		}
	}
}

installFrontend {
	configure configFrontendTasks
}

processResources.dependsOn assembleFrontend

task stage(dependsOn: [clean, installDist])
installDist.mustRunAfter clean